let test = <ref *2> Socket {
  nsp: <ref *1> Namespace {
    name: '/',
    server: Server {
      nsps: [Object],
      _path: '/socket.io',
      _serveClient: true,
      _adapter: [Function: Adapter],
      _origins: '*:*',
      sockets: [Circular *1],
      eio: [Server],
      httpServer: [Server],
      engine: [Server]
    },
    sockets: { 'O5ZOwN-d1EN6rTv9AAAA': [Circular *2] },
    connected: { 'O5ZOwN-d1EN6rTv9AAAA': [Circular *2] },
    fns: [],
    ids: 0,
    adapter: Adapter {
      nsp: [Circular *1],
      rooms: [Object],
      sids: [Object],
      encoder: Encoder {}
    },
    _events: [Object: null prototype] { connection: [Function (anonymous)] },
    _eventsCount: 1
  },
  server: <ref *3> Server {
    nsps: { '/': [Namespace] },
    _path: '/socket.io',
    _serveClient: true,
    _adapter: [Function: Adapter],
    _origins: '*:*',
    sockets: <ref *1> Namespace {
      name: '/',
      server: [Circular *3],
      sockets: [Object],
      connected: [Object],
      fns: [],
      ids: 0,
      adapter: [Adapter],
      _events: [Object: null prototype],
      _eventsCount: 1
    },
    eio: Server {
      clients: [Object],
      clientsCount: 1,
      wsEngine: undefined,
      pingTimeout: 60000,
      pingInterval: 25000,
      upgradeTimeout: 10000,
      maxHttpBufferSize: 100000000,
      transports: [Array],
      allowUpgrades: true,
      allowRequest: [Function: bound ],
      cookie: 'io',
      cookiePath: '/',
      cookieHttpOnly: true,
      perMessageDeflate: [Object],
      httpCompression: [Object],
      ws: [WebSocketServer],
      _events: [Object: null prototype],
      _eventsCount: 1
    },
    httpServer: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 0,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:3004',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 8
    },
    engine: Server {
      clients: [Object],
      clientsCount: 1,
      wsEngine: undefined,
      pingTimeout: 60000,
      pingInterval: 25000,
      upgradeTimeout: 10000,
      maxHttpBufferSize: 100000000,
      transports: [Array],
      allowUpgrades: true,
      allowRequest: [Function: bound ],
      cookie: 'io',
      cookiePath: '/',
      cookieHttpOnly: true,
      perMessageDeflate: [Object],
      httpCompression: [Object],
      ws: [WebSocketServer],
      _events: [Object: null prototype],
      _eventsCount: 1
    }
  },
  adapter: <ref *4> Adapter {
    nsp: <ref *1> Namespace {
      name: '/',
      server: [Server],
      sockets: [Object],
      connected: [Object],
      fns: [],
      ids: 0,
      adapter: [Circular *4],
      _events: [Object: null prototype],
      _eventsCount: 1
    },
    rooms: { 'O5ZOwN-d1EN6rTv9AAAA': [Room] },
    sids: { 'O5ZOwN-d1EN6rTv9AAAA': [Object] },
    encoder: Encoder {}
  },
  id: 'O5ZOwN-d1EN6rTv9AAAA',
  client: Client {
    server: <ref *3> Server {
      nsps: [Object],
      _path: '/socket.io',
      _serveClient: true,
      _adapter: [Function: Adapter],
      _origins: '*:*',
      sockets: [Namespace],
      eio: [Server],
      httpServer: [Server],
      engine: [Server]
    },
    conn: Socket {
      id: 'O5ZOwN-d1EN6rTv9AAAA',
      server: [Server],
      upgrading: false,
      upgraded: true,
      readyState: 'open',
      writeBuffer: [],
      packetsFn: [],
      sentCallbackFn: [],
      cleanupFn: [Array],
      request: [IncomingMessage],
      remoteAddress: '127.0.0.1',
      checkIntervalTimer: null,
      upgradeTimeoutTimer: null,
      pingTimeoutTimer: Timeout {
        _idleTimeout: 85000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 5351,
        _onTimeout: [Function (anonymous)],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 74,
        [Symbol(triggerId)]: 48
      },
      transport: [WebSocket],
      _events: [Object: null prototype],
      _eventsCount: 3
    },
    encoder: Encoder {},
    decoder: Decoder { reconstructor: null, _callbacks: [Object] },
    id: 'O5ZOwN-d1EN6rTv9AAAA',
    request: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/socket.io/?EIO=3&transport=polling&t=NBXihtl',
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: false,
      _dumped: true,
      _query: [Object: null prototype],
      res: [ServerResponse],
      cleanup: [Function: cleanup],
      [Symbol(kCapture)]: false
    },
    onclose: [Function: bound ],
    ondata: [Function: bound ],
    onerror: [Function: bound ],
    ondecoded: [Function: bound ],
    sockets: { 'O5ZOwN-d1EN6rTv9AAAA': [Circular *2] },
    nsps: { '/': [Circular *2] },
    connectBuffer: []
  },
  conn: Socket {
    id: 'O5ZOwN-d1EN6rTv9AAAA',
    server: Server {
      clients: [Object],
      clientsCount: 1,
      wsEngine: undefined,
      pingTimeout: 60000,
      pingInterval: 25000,
      upgradeTimeout: 10000,
      maxHttpBufferSize: 100000000,
      transports: [Array],
      allowUpgrades: true,
      allowRequest: [Function: bound ],
      cookie: 'io',
      cookiePath: '/',
      cookieHttpOnly: true,
      perMessageDeflate: [Object],
      httpCompression: [Object],
      ws: [WebSocketServer],
      _events: [Object: null prototype],
      _eventsCount: 1
    },
    upgrading: false,
    upgraded: true,
    readyState: 'open',
    writeBuffer: [],
    packetsFn: [],
    sentCallbackFn: [],
    cleanupFn: [ [Function (anonymous)], [Function (anonymous)] ],
    request: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/socket.io/?EIO=3&transport=polling&t=NBXihtl',
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: false,
      _dumped: true,
      _query: [Object: null prototype],
      res: [ServerResponse],
      cleanup: [Function: cleanup],
      [Symbol(kCapture)]: false
    },
    remoteAddress: '127.0.0.1',
    checkIntervalTimer: null,
    upgradeTimeoutTimer: null,
    pingTimeoutTimer: Timeout {
      _idleTimeout: 85000,
      _idlePrev: [TimersList],
      _idleNext: [TimersList],
      _idleStart: 5351,
      _onTimeout: [Function (anonymous)],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: true,
      [Symbol(asyncId)]: 74,
      [Symbol(triggerId)]: 48
    },
    transport: WebSocket {
      readyState: 'open',
      discarded: false,
      socket: [WebSocket],
      writable: true,
      perMessageDeflate: [Object],
      supportsBinary: true,
      _events: [Object: null prototype],
      _eventsCount: 4
    },
    _events: [Object: null prototype] {
      close: [Array],
      data: [Function: bound ],
      error: [Function: bound ]
    },
    _eventsCount: 3
  },
  rooms: { 'O5ZOwN-d1EN6rTv9AAAA': 'O5ZOwN-d1EN6rTv9AAAA' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake: {
    headers: {
      host: '0.0.0.0:3004',
      connection: 'keep-alive',
      accept: '*/*',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36',
      origin: 'http://0.0.0.0:8080',
      referer: 'http://0.0.0.0:8080/',
      'accept-encoding': 'gzip, deflate',
      'accept-language': 'en-US,en;q=0.9',
      cookie: 'io=WvvTYoC1qDpVR7KGAAAD'
    },
    time: 'Tue Jun 23 2020 17:01:27 GMT+0200 (Central European Summer Time)',
    address: '127.0.0.1',
    xdomain: true,
    secure: false,
    issued: 1592924487167,
    url: '/socket.io/?EIO=3&transport=polling&t=NBXihtl',
    query: { EIO: '3', transport: 'polling', t: 'NBXihtl' }
  },
  fns: [],
  _events: [Object: null prototype] {
    register: [Function (anonymous)],
    'room#tata': [Function (anonymous)]
  },
  _eventsCount: 2
}